swagger: '2.0'
info:
  description: >-
    Official documentation for Lineblocs web API
  version: 1.0.6
  title: Lineblocs web API
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: lineblocs.com
basePath: /api/v1
tags:
  - name: Lineblocs web API
    description: All about the APIs
    externalDocs:
      description: Find out more
      url: https://lineblocs.com/api/docs/
  - name: widgetTemplate
    description: save widget template
    externalDocs:
      description: Find out more
      url: /widgetTemplate/
  - name: flow
    description: create and manage flows
    externalDocs:
      description: 
      url: /flow/
  - name: did
    description: create and manage DID numebrs
    externalDocs:
      description: 
      url: /did/
  - name: port
    description: create and manage port requests
    externalDocs:
      description: 
      url: /port/
  - name: extension
    description: create and manage extensions
    externalDocs:
      description: 
      url: /extension/
  - name: function
    description: create and manage macro functions
    externalDocs:
      description: 
      url: /function/
  - name: byo
    description: create and manage byo data
    externalDocs:
      description: 
      url: /byo/
  - name: trunk
    description: create and manage hosted SIP trunks
    externalDocs:
      description: 
      url: /trunk/

  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
schemes:
  - https
  - http
paths:
  /widgetTemplate/list:
    get:
      tags:
        - widgetTemplate
      summary: list available widget templates
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
  /widgetTemplate/:
    post:
      tags:
        - widgetTemplate
      summary: create a new widget template
      description: ''
      consumes:
        - application/json
      parameters:
        - name: title
          in: body
          description: name of template
          required: true
          type: string
        - name: data
          in: body
          description: data for widget template
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/WidgetTemplateData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets

  /flow/list:
    get:
      tags:
        - flow
      summary: list available flows
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FlowList'
  /flow/{flowId}:
    get:
      tags:
        - flow
      summary: get flow
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Flow'
    put:
      tags:
        - flow
      summary: create a new flow
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of flow
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: flow_json
          in: body
          description: JSON data for flow
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/flowData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - flow
      summary: delete a flow
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /flow/:
    post:
      tags:
        - flow
      summary: create a new flow
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of flow
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: flow_json
          in: body
          description: JSON data for flow
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/flowData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /did/list:
    get:
      tags:
        - did
      summary: list available dids
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DIDList'
  /did/availableNumbers:
    get:
      tags:
        - did
      summary: list available dids
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DIDAvailableList'
  /did/{didId}:
    get:
      tags:
        - did
      summary: get did
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DID'
    put:
      tags:
        - did
      summary: create a new did
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of did
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: did_json
          in: body
          description: JSON data for did
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/didData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - did
      summary: delete a did
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /did/:
    post:
      tags:
        - did
      summary: create a new did
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of did
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: did_json
          in: body
          description: JSON data for did
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/didData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /port/list:
    get:
      tags:
        - port
      summary: list available ports
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DIDList'
  /port/{portId}:
    get:
      tags:
        - port
      summary: get port
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DID'
    put:
      tags:
        - port
      summary: create a new port
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of port
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: port_json
          in: body
          description: JSON data for port
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/portData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - port
      summary: delete a port
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /port/:
    post:
      tags:
        - port
      summary: create a new port
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of port
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: port_json
          in: body
          description: JSON data for port
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/portData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /extension/list:
    get:
      tags:
        - extension
      summary: list available extensions
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DIDList'
  /extension/{extensionId}:
    get:
      tags:
        - extension
      summary: get extension
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DID'
    put:
      tags:
        - extension
      summary: create a new extension
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of extension
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: extension_json
          in: body
          description: JSON data for extension
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/extensionData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - extension
      summary: delete a extension
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /extension/{extensionId}/history:
    get:
      tags:
        - extension
      summary: get extension history
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ExtensionHistory'
  /extension/:
    post:
      tags:
        - extension
      summary: create a new extension
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of extension
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: extension_json
          in: body
          description: JSON data for extension
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/extensionData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /function/list:
    get:
      tags:
        - function
      summary: list available functions
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FunctionList'
  /function/{functionId}:
    get:
      tags:
        - function
      summary: get function
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Function'
    put:
      tags:
        - function
      summary: create a new function
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of function
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: function_json
          in: body
          description: JSON data for function
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/functionData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - function
      summary: delete a function
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /function/:
    post:
      tags:
        - function
      summary: create a new function
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of function
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: function_json
          in: body
          description: JSON data for function
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/functionData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets


  /function/templateData/{templateId}:
    get:
      tags:
        - function
      summary: get function
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Function'
    post:
      tags:
        - function
      summary: create a new function
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of function
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: function_json
          in: body
          description: JSON data for function
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/functionData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /function/templateData/list:
    get:
      tags:
        - function
      summary: get function
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FunctionTemplateData'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /byo/carrier/list:
    get:
      tags:
        - byo
      summary: list available carriers
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FunctionList'
  /byo/carrier/{carrierId}:
    get:
      tags:
        - byo
      summary: get carrier
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Function'
    put:
      tags:
        - byo
      summary: create a new carrier
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of carrier
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: carrier_json
          in: body
          description: JSON data for carrier
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/carrierData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - byo
      summary: delete a carrier
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /byo/carrier/:
    post:
      tags:
        - byo
      summary: create a new carrier
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of carrier
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: carrier_json
          in: body
          description: JSON data for carrier
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/carrierData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /byo/did/list:
    get:
      tags:
        - byo
      summary: list available dids
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FunctionList'
  /byo/did/{didId}:
    get:
      tags:
        - did
      summary: get did
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Function'
    put:
      tags:
        - byo
      summary: create a new did
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of did
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: did_json
          in: body
          description: JSON data for did
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/didData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - byo
      summary: delete a did
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /byo/did/:
    post:
      tags:
        - byo
      summary: create a new did
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of did
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: did_json
          in: body
          description: JSON data for did
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/didData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /trunk/list:
    get:
      tags:
        - trunk
      summary: list available trunks
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TrunkList'
  /trunk/{trunkId}:
    get:
      tags:
        - trunk
      summary: get trunk
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Trunk'
    put:
      tags:
        - trunk
      summary: create a new trunk
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of trunk
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: trunk_json
          in: body
          description: JSON data for trunk
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/trunkData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - trunk
      summary: delete a trunk
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /trunk/:
    post:
      tags:
        - trunk
      summary: create a new trunk
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of trunk
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
        - name: trunk_json
          in: body
          description: JSON data for trunk
          required: true
          schema:
            type: object
            required:
              - cells
            properties:
              cells:
                type: array
          #$ref: '#/definitions/trunkData'
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /call/list:
    get:
      tags:
        - call
      summary: list available calls
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CallList'
  /call/{callId}:
    get:
      tags:
        - call
      summary: get call
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Call'
  /log/list:
    get:
      tags:
        - log
      summary: list available logs
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LogList'
  /log/{logId}:
    get:
      tags:
        - log
      summary: get log
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Log'

  /recording/list:
    get:
      tags:
        - recording
      summary: list available recordings
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RecordingList'
  /recording/{recordingId}:
    get:
      tags:
        - recording
      summary: get recording
      description: ''
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Recording'
    delete:
      tags:
        - recording
      summary: delete a recording
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /recording/tag/:
    post:
      tags:
        - recording
      summary: create recording tag
      description: ''
      consumes:
        - application/json
      parameters:
        - name: name
          in: body
          description: name of recording
          required: true
          type: string
        - name: description
          in: body
          description: 
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /recording/tag/{tagName}:
    delete:
      tags:
        - recording
      summary: remove recording tag
      description: ''
      consumes:
        - application/json
      responses:
        '200':
          description: successful operation
          #schema:
          #  $ref: '#/definitions/ApiNoContentResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets

securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
  petstore_auth:
    type: oauth2
    authorizationUrl: https://petstore.swagger.io/oauth/authorize
    flow: implicit
    scopes:
      read:pets: read your pets
      write:pets: modify pets in your account
definitions:
  ApiResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/WidgetTemplate'
      message:
        type: string
  ApiNoContentResponse:
    type: string
  WidgetTemplate:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      data:
        type: string
  WidgetTemplateData:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      data:
        type: string
  Flow:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      flow_json:
        type: string
  FlowList:
    type: array
    items:
      $ref: '#/definitions/Flow'
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  Pet:
    type: object
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          wrapped: true
        items:
          type: string
          xml:
            name: photoUrl
      tags:
        type: array
        xml:
          wrapped: true
        items:
          xml:
            name: tag
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
    xml:
      name: Order
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
